<<<<<<< HEAD
#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
=======
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
>>>>>>> upstream/master

# <<<oracle_instance:sep(124)>>>
# XE|11.2.0.2.0|OPEN|ALLOWED|STOPPED|3524|2752243048|NOARCHIVELOG|PRIMARY|NO|XE|080220151025
# last entry: db creation time 'ddmmyyyyhh24mi'


<<<<<<< HEAD
=======
def _parse_raw_db_creation_time(raw_db_creation_time):
    if raw_db_creation_time is None:
        return None

    # We just translate the format to another
    # "%d%m%Y%H%M%S" => "%Y-%m-%d %H:%M"
    # we cannot use time because we have no information about the timezone here.
    try:
        year = int(raw_db_creation_time[4:8])
        month = int(raw_db_creation_time[2:4])
        day = int(raw_db_creation_time[:2])
        hours = int(raw_db_creation_time[8:10])
        minutes = int(raw_db_creation_time[10:])
    except (IndexError, ValueError):
        return None
    return "%s-%02d-%02d %02d:%02d" % (year, month, day, hours, minutes)


>>>>>>> upstream/master
def inv_oracle_instance(info, inventory_tree, status_data_tree):
    path = "software.applications.oracle.instance:"
    inv_node = inventory_tree.get_list(path)
    status_node = status_data_tree.get_list(path)
<<<<<<< HEAD
    for line in info:
        db_creation_time = None
        if len(line) == 6:
            sid, version, openmode, logins, _unused, _unused2 = line
            logmode = None
            up_seconds = None

        elif len(line) >= 11:
            sid, version, openmode, logins, _archiver, up_seconds_str, _dbid, \
                logmode, _database_role, _force_logging, _name = line[:11]
            up_seconds = int(up_seconds_str)
            if len(line) > 11:
                db_creation_time = time.mktime(time.strptime(line[11], "%d%m%Y%H%M%S"))
=======
    for item_data in sorted(info.values(), key=lambda v: v.get("sid")):
        if item_data['invalid_data']:
            continue

        inv_node.append({
            "sid": item_data['sid'],
            "pname": item_data['pname'],
            "version": item_data['version'],
            "openmode": item_data['openmode'],
            "logmode": item_data['log_mode'],
            "logins": item_data['logins'],
            "db_creation_time": _parse_raw_db_creation_time(item_data['db_creation_time']),
        })
>>>>>>> upstream/master

        try:
            up_seconds = int(item_data['up_seconds'])
        except (TypeError, ValueError):
            up_seconds = None

<<<<<<< HEAD
        inv_node.append({
            "sid": sid,
            "version": version,
            "openmode": openmode,
            "logmode": logmode,
            "logins": logins,
            "db_creation_time": db_creation_time,
        })

        status_node.append({
            "sid": sid,
=======
        status_node.append({
            "sid": item_data['sid'],
            "pname": item_data['pname'],
>>>>>>> upstream/master
            "db_uptime": up_seconds,
        })


inv_info['oracle_instance'] = {
    'inv_function': inv_oracle_instance,
}
