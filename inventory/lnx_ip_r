<<<<<<< HEAD
#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
=======
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
>>>>>>> upstream/master

# Example output from agent:
# <<<ip_a_r>>>
# default via 10.10.0.1 dev wlan0  proto static
# 10.10.0.0/16 dev wlan0  proto kernel  scope link  src 10.10.0.41  metric 9


def parse_lnx_ip_route(line):
    def parse_network(n):
        if n == "default":
            return "0.0.0.0/0"
        return n

    route = {
        "target": parse_network(line[0]),
    }

    line = line[1:]
    while line:
        if line[0] == "dev":
            route.setdefault("type", "local")
            route["device"] = line[1]
            line = line[2:]
        elif line[0] == "via":
            route["type"] = "gateway"
            route["gateway"] = line[1]
            line = line[2:]
        else:
            line = line[1:]

    return route


def inv_lnx_ip_r(info):
    routes = inv_tree_list("networking.routes:")
    for line in info:
        routes.append(parse_lnx_ip_route(line))


inv_info['lnx_ip_r'] = {
    "inv_function": inv_lnx_ip_r,
}
