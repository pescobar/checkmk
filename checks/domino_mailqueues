#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

<<<<<<< HEAD
factory_settings["domino_mailqueues_defaults"] = {"queue_length": (300, 350)}

domino_mailqueues = {
    1: ("lnDeadMail", "Dead Mails"),  # lnDeadMail
    6: ("lnWaitingMail", "Waiting Mails"),  # lnWaitingMail
    21: ("lnMailHold", "Mails on Hold"),  # lnMailHold
    31: ("lnMailTotalPending", "Total Pending Mails"),  # lnMailTotalPending
    34: ("InMailWaitingforDNS", "Mails waiting for DNS"),  # InMailWaitingforDNS
}


def inventory_domino_mailqueues(info):
    for line in info:
        if line:
            val = int(line[0][0].split(".")[12])
            if val in domino_mailqueues.keys():
                yield domino_mailqueues[val][0], {}


def check_domino_mailqueues(item, params, info):
    for line in info:
        if not line:
            continue

        val = int(line[0][0].split(".")[12])
        if item == domino_mailqueues[val][0]:
            reading = int(line[0][1])
            warn, crit = params.get("queue_length")
            infotext = "%d %s" % (reading, domino_mailqueues[val][1])
            levels = " (Warn/Crit at %s/%s)" % (warn, crit)
            perfdata = [("mails", reading, warn, crit)]
            state = 0
            if reading >= crit:
                state = 2
                infotext += levels
            elif reading >= warn:
                state = 1
                infotext += levels
            yield state, infotext, perfdata
=======
# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables from the check-context which are necessary for
# resolving legacy discovery results such as [("SUMMARY", "diskstat_default_levels")]. Furthermore,
# it might also remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.domino import *  # pylint: disable=wildcard-import,unused-wildcard-import
factory_settings["domino_mailqueues_defaults"] = {"queue_length": (300, 350)}

MAILQUEUES_LABEL = (
    ("lnDeadMail", "Dead mails"),
    ("lnWaitingMail", "Waiting mails"),
    ("lnMailHold", "Mails on hold"),
    ("lnMailTotalPending", "Total pending mails"),
    ("InMailWaitingforDNS", "Mails waiting for DNS"),
)


def parse_domino_mailqueues(info):
    if not info:
        return {}

    return {
        item: (label, int(raw_value))
        for (item, label), raw_value in zip(MAILQUEUES_LABEL, info[0])
    }


@get_parsed_item_data
def check_domino_mailqueues(_item, params, data):
    label, value = data
    yield check_levels(
        value,
        'mails',
        params.get("queue_length"),
        infoname=label,
        human_readable_func=lambda d: "%d" % int(d),
    )

>>>>>>> upstream/master


check_info["domino_mailqueues"] = {
<<<<<<< HEAD
    "check_function": check_domino_mailqueues,
    "inventory_function": inventory_domino_mailqueues,
    "service_description": "Domino Queue %s",
    "has_perfdata": True,
    "default_levels_variable": "domino_mailqueues_defaults",
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.311.1.1.3.1.2",
    "snmp_info": [
        (".1.3.6.1.4.1.334.72.1.1.4", [OID_STRING, x]) for x in sorted(domino_mailqueues.keys())
    ],
    "group": "domino_mailqueues"
=======
    "parse_function": parse_domino_mailqueues,
    "inventory_function": discover(),
    "check_function": check_domino_mailqueues,
    "service_description": "Domino Queue %s",
    "has_perfdata": True,
    "default_levels_variable": "domino_mailqueues_defaults",
    "snmp_scan_function": scan_domino,
    "snmp_info": (
        ".1.3.6.1.4.1.334.72.1.1.4",
        [
            '1',  # lnDeadMail
            '6',  # lnWaitingMail
            '21',  # lnMailHold
            '31',  # lnMailTotalPending
            '34',  # InMailWaitingforDNS
        ]),
    "group": "domino_mailqueues",
>>>>>>> upstream/master
}
