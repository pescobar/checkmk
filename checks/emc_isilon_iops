#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

<<<<<<< HEAD

def inventory_emc_isilon_iops(info):
    inventory = []
    for name, _iops in info:
        inventory.append((name, None))
    return inventory


def check_emc_isilon_iops(item, _no_params, info):
    for name, iops in info:
        if name == item:
            perfdata = [("iops", iops)]
            message = "%s disk operations per second" % int(iops)
            return 0, message, perfdata
    return 3, "Disk not found"
=======

def parse_emc_isilon_iops(info):
    parsed = {}
    for name, iops_str in info:
        try:
            parsed[name] = int(iops_str)
        except ValueError:
            pass
    return parsed


@get_parsed_item_data
def check_emc_isilon_iops(_item, _no_params, iops):
    return check_levels(
        iops,
        "iops",
        None,
        infoname="Disk operations per second",
        human_readable_func=lambda d: "%d" % d,
    )

>>>>>>> upstream/master


check_info["emc_isilon_iops"] = {
<<<<<<< HEAD
    "check_function": check_emc_isilon_iops,
    "inventory_function": inventory_emc_isilon_iops,
=======
    "parse_function": parse_emc_isilon_iops,
    "inventory_function": discover(),
    "check_function": check_emc_isilon_iops,
>>>>>>> upstream/master
    "service_description": "Disk %s IO",
    "has_perfdata": True,
    "snmp_info": (
        ".1.3.6.1.4.1.12124.2.2.52.1",
        [
            2,  # diskPerfDeviceName
            3,  # diskPerfOpsPerSecond
        ]),
    "snmp_scan_function": lambda oid: "isilon" in oid(".1.3.6.1.2.1.1.1.0").lower(),
}
