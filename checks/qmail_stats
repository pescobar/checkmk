<<<<<<< HEAD
#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
=======
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
>>>>>>> upstream/master

factory_settings['qmail_stats_default_levels'] = {
    "deferred": (10, 20),
}


def inventory_qmail_stats(info):
    if len(info) > 0:
        return [("", {})]


def check_qmail_stats(_no_item, params, info):
    if not isinstance(params, dict):
        params = {
            "deferred": params,
        }
    warn, crit = params["deferred"]
    queue_length = saveint(info[0][-1])
    state = 0
    label = ''
    if queue_length >= crit:
        state = 2
    elif queue_length >= warn:
        state = 1
    if state:
        label = "(Levels at %d/%d)" % (warn, crit)

    perf = [('queue', queue_length, warn, crit)]
    message = "Mailqueue length is %d %s" % (queue_length, label)
    return state, message, perf


check_info['qmail_stats'] = {
    "inventory_function": inventory_qmail_stats,
    "check_function": check_qmail_stats,
    "service_description": "Qmail Queue %s",
    "has_perfdata": True,
    "default_levels_variable": "qmail_stats_default_levels",
    "group": "mail_queue_length",
}
