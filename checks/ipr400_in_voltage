<<<<<<< HEAD
#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
=======
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
>>>>>>> upstream/master

ipr400_in_voltage_default_levels = (12, 11)  # 11.5-13.8V is the operational voltage according

# to the manual


def inventory_ipr400_in_voltage(info):
    if len(info) > 0:
        yield "1", "ipr400_in_voltage_default_levels"


def check_ipr400_in_voltage(item, params, info):
    warn, crit = params
    power = int(info[0][0]) / 1000.0  # appears to be in mV
    perfdata = [("in_voltage", power, warn, crit)]
    infotext = "in voltage: %.1fV" % power
    limitstext = "(warn/crit below %dV/%dV)" % (warn, crit)

    if power <= crit:
        return 2, infotext + ", " + limitstext, perfdata
    elif power <= warn:
        return 1, infotext + ", " + limitstext, perfdata
    return 0, infotext, perfdata


check_info["ipr400_in_voltage"] = {
    "check_function": check_ipr400_in_voltage,
    "inventory_function": inventory_ipr400_in_voltage,
    "service_description": "IN Voltage %s",
    "has_perfdata": True,
    "group": "evolt",
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.1.0").lower().startswith(
        "ipr voip device ipr400"),
    "snmp_info": (".1.3.6.1.4.1.27053.1.4.5.10", ["0"]),
}
