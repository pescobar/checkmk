<<<<<<< HEAD
#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
=======
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
>>>>>>> upstream/master


def inventory_fortigate_sensors(info):
    return [(None, None)]


def check_fortigate_sensors(item, params, info):
    amount_of_sensors = []
    sensors_in_alarm = []

    for name, value, dev_status in info:
        # We assume that sensors with value "0" are not connected.
        # The related MIB includes no other hint for that.
        if value != "0":
            amount_of_sensors.append(name)
            if dev_status == "1":
                sensors_in_alarm.append(name)

    infotexts = ["%s sensors" % len(amount_of_sensors)]
    count_ok_sensors = len(amount_of_sensors) - len(sensors_in_alarm)
    if count_ok_sensors:
        infotexts.append("%s OK" % count_ok_sensors)

    state = 0
    if sensors_in_alarm:
        infotexts.append("%s with alarm: %s" % \
                         (len(sensors_in_alarm),
                          ", ".join(sensors_in_alarm)))
        state = 2

    return state, " - ".join(infotexts)


check_info['fortigate_sensors'] = {
    'inventory_function': inventory_fortigate_sensors,
    'check_function': check_fortigate_sensors,
    'service_description': 'Sensor Summary',
    'snmp_info': (
        '.1.3.6.1.4.1.12356.101.4.3.2.1',
        [
            '2',  # FORTINET-FORTIGATE-MIB::fgHwSensorEntName
            '3',  # FORTINET-FORTIGATE-MIB::fgHwSensorEntValue
            '4',  # FORTINET-FORTIGATE-MIB::fgHwSensorEntAlarmStatus
        ]),
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.2.1.1.2.0") in [
        '.1.3.6.1.4.1.12356.101.1.5004',
        '.1.3.6.1.4.1.12356.101.1.10004',
    ],
}
