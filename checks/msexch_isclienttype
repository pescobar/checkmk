<<<<<<< HEAD
#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

=======
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables from the check-context which are necessary for
# resolving legacy discovery results such as [("SUMMARY", "diskstat_default_levels")]. Furthermore,
# it might also remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.wmi import *  # pylint: disable=wildcard-import,unused-wildcard-import
>>>>>>> upstream/master
# checks for is store and is clienttype
# as I understand it, these are logically related but the performance
# counters are completely separate

# source for these defaults:
# https://blogs.technet.microsoft.com/samdrey/2015/01/26/exchange-2013-performance-counters-and-their-thresholds/
factory_settings['msexch_isclienttype_defaultlevels'] = {
    'store_latency': {
        'upper': (40.0, 50.0)
    },
    'clienttype_latency': {
        'upper': (40.0, 50.0)
    },
    'clienttype_requests': {
        'upper': (60, 70)
    }
}


<<<<<<< HEAD
def check_msexch_isclienttype(item, params, parsed):
    yield wmi_yield_raw_average(parsed[""],
                                item,
                                "RPCAverageLatency",
                                label="ms average latency",
                                perfvar="average_latency",
                                levels=params['clienttype_latency'])
    yield wmi_yield_raw_persec(parsed[""],
                               item,
                               "RPCRequests",
                               label=" RPC Requests",
=======
def discover_msexch_isclienttype(parsed):
    return inventory_wmi_table_instances(parsed)


def check_msexch_isclienttype(item, params, parsed):
    try:
        average = wmi_calculate_raw_average(parsed[""], item, "RPCAverageLatency", 1)
    except KeyError:
        yield 3, "item not present anymore", []
    else:
        yield check_levels(
            average,
            "average_latency",
            params['clienttype_latency'].get('upper'),
            infoname="Average latency",
            unit="ms",
        )

    yield wmi_yield_raw_persec(parsed[""],
                               item,
                               "RPCRequests",
                               infoname="RPC Requests/sec",
>>>>>>> upstream/master
                               perfvar="requests_per_sec",
                               levels=params['clienttype_requests'])


check_info['msexch_isclienttype'] = {
<<<<<<< HEAD
    'inventory_function': inventory_wmi_table,
=======
    'inventory_function': discover_msexch_isclienttype,
>>>>>>> upstream/master
    'check_function': check_msexch_isclienttype,
    'parse_function': parse_wmi_table,
    'has_perfdata': True,
    'service_description': "Exchange IS Client Type %s",
<<<<<<< HEAD
    'includes': ['wmi.include'],
=======
>>>>>>> upstream/master
    'group': 'msx_info_store',
    'default_levels_variable': 'msexch_isclienttype_defaultlevels'
}
