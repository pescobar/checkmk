<<<<<<< HEAD
#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
=======
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
>>>>>>> upstream/master

# .1.3.6.1.4.1.211.1.21.1.150.2.22.2.1.2.0 1996492800
# .1.3.6.1.4.1.211.1.21.1.150.2.22.2.1.2.1 1996492801
# .1.3.6.1.4.1.211.1.21.1.150.2.22.2.1.3.0 1
# .1.3.6.1.4.1.211.1.21.1.150.2.22.2.1.3.1 4
# .1.3.6.1.4.1.211.1.21.1.150.2.22.2.1.5.0 49
# .1.3.6.1.4.1.211.1.21.1.150.2.22.2.1.5.1 -1

factory_settings["fjdarye500_pfm_default_levels"] = {"health_lifetime_perc": (20.0, 15.0)}


def inventory_fjdarye500_pfm(info):
    return [(pfm_id, {}) for pfm_id, status, _health_lifetime_str in info if status != "4"]


def check_fjdarye500_pfm(item, params, info):
    map_states = {
        "1": (0, "normal"),
        "2": (2, "alarm"),
        "3": (1, "warning"),
        "4": (2, "invalid"),
        "5": (0, "maintenance"),
        "6": (3, "undefined"),
    }

    for pfm_id, status, health_lifetime_str in info:
        if item == pfm_id:
            state, state_readable = map_states[status]
            yield state, "Status: %s" % state_readable

            health_lifetime = int(health_lifetime_str)
            state = 0
            if health_lifetime < 0:
                health_info = "cannot be obtained"

            else:
                health_info = get_percent_human_readable(health_lifetime)
                warn, crit = params["health_lifetime_perc"]

                if health_lifetime < crit:
                    state = 2
                elif health_lifetime < warn:
                    state = 1

                if state:
                    health_info += " (warn/crit below %s/%s)" % \
                                     (get_percent_human_readable(warn),
                                      get_percent_human_readable(crit))

            yield state, "Health lifetime: %s" % health_info


check_info['fjdarye500_pfm'] = {
    'inventory_function': inventory_fjdarye500_pfm,
    'check_function': check_fjdarye500_pfm,
    'service_description': 'PCIe flash module %s',
    'snmp_info': (
        '.1.3.6.1.4.1.211.1.21.1.150.2.22.2.1',
        [
            '2',  # FJDARY-E150::fjdaryPfmItemId
            '3',  # FJDARY-E150::fjdaryPfmStatus
            '5',  # FJDARY-E150::fjdaryPfmHealth
        ]),
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.211.1.21.1.150",
    'default_levels_variable': "fjdarye500_pfm_default_levels",
    'group': "pfm_health",
}
