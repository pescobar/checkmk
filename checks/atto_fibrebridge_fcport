<<<<<<< HEAD
#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
=======
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
>>>>>>> upstream/master

factory_settings["atto_fibrebridge_fcport"] = {
    "fc_tx_words": None,
    "fc_rx_words": None,
}


def inventory_atto_fibrebridge_fcport(info):
    for line in info:
        yield line[0], {}


def check_atto_fibrebridge_fcport(item, params, info):
    now = time.time()
    for line in info:
        if line[0] == item:
            fc_tx_words = get_rate(item + "tx", now, int(line[1]))
            fc_rx_words = get_rate(item + "rx", now, int(line[2]))

    if not params["fc_tx_words"]:
        yield 0, "TX: %.2f words/s" % fc_tx_words, [("fc_tx_words", fc_tx_words)]
    else:
        yield check_levels(fc_tx_words, "fc_tx_words", params["fc_tx_words"], infoname="TX")

    if not params["fc_rx_words"]:
        yield 0, "RX: %.2f words/s" % fc_rx_words, [("fc_rx_words", fc_rx_words)]
    else:
        yield check_levels(fc_rx_words, "fc_rx_words", params["fc_rx_words"], infoname="RX")


check_info["atto_fibrebridge_fcport"] = {
    "inventory_function": inventory_atto_fibrebridge_fcport,
    "check_function": check_atto_fibrebridge_fcport,
    "service_description": "FC Port %s",
    "default_levels_variable": "atto_fibrebridge_fcport",
    "group": "fcport_words",
    "has_perfdata": True,
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.4547"),
    "snmp_info": (
        ".1.3.6.1.4.1.4547.2.3.3.2.1",
        [
            OID_END,
            "2",  #fcStatsTxWords
            "3",  #fcStatsRxWords
        ]),
}
